on:
  push:
    branches:
      - main
      - tmp
  pull_request:
      types: [opened, synchronize, reopened]

name: Sonarcloud Scan
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
#    - uses: actions/checkout@v3
#    - name: Set up Python 3.8 for gcovr
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.8
#    - name: install gcovr 5.0
#      run: |
#        pip install gcovr==5.0 # 5.1 is not supported
    - name: Install sonar-scanner and build-wrapper
      uses: SonarSource/sonarcloud-github-c-cpp@v2
    - name: Install Prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install autoconf automake cmake libtool pkg-config gettext libjson-c-dev flex bison libpcap-dev zlib1g-dev
    - name: Run build-wrapper
      run: |
        mkdir build
        cmake -S . -B build -DBUILD_NDPI=ON -DDENABLE_ZLIB=ON -DNDPI_WITH_GCRYPT=OFF
        build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build/ --config Release
#    - name: Run tests
#      run: |
#        for file in $(ls libnDPI/tests/cfgs/*/pcap/*.pcap libnDPI/tests/cfgs/*/pcap/*.pcapng libnDPI/tests/cfgs/*/pcap/*.cap); do \
#            echo -n "${file} "; \
#            ./build/nDPId-test "${file}" >/dev/null 2>/dev/null; \
#            echo "[ok]"; \
#        done
#    - name: Collect coverage into one XML report
#      run: |
#        gcovr --sonarqube > coverage.xml
    - name: Run sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
            --define sonar.branch.name=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} \
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            --define sonar.organization=lnslbrty \
            --define sonar.projectKey=lnslbrty_nDPId \
            --define sonar.exclusions=dependencies/uthash/src/** \
            --define sonar.verbose=true \
            --define sonar.python.version=3.8 \
            --define sonar.cfamily.gcov.reportsPath=coverage.xml
